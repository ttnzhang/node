编写一个程序，发起一个HTTP GET请求，请求的URL为所提供给你的命令行参数的第一个，
收集所有服务器所返回的数据(不仅仅包括data事件),然后在终端用两行打印出来.

你所打印的内容，第一行应该是一个整数，用来表示你所受到的字符串内容长度，第二行
则是服务器返回给你的完整的字符串结果.

## 提示
你有两种解题的思路:
1) 你可以把所有的data事件所得的结果手机起来，暂存并追加在一起，而不是
在收到后立刻打印出来。通过监听end事件，可以确定stream是否完成了传输
如果传输结束了，你就可以将你收集到的结果打印出来了.
2) 使用一个第三方模块，来简化从stream中收集数据的繁琐步骤.这里有两个
不同的模块都提供了一些有用的API来解决这个问题:bl(buffer list)或者
concat-stream,选择一个.

要安装一个node模块，需要用到node的包管理工具npm ,键入
    npm install bl
这样，相应的模块的最新版本便会下载到当前目录下一个名叫node_modules的子目录中。
任何在这个子目录中的模块都可以简单的使用require语法来将模块载入到你的程序中,
并且不需要加./这样的路径前缀:
    var bl = require('bl')
这里，node会先查找是否有这个名字的核心模块，如果没有，再查找在node_modules目录
下是否有这个模块.

你可以把一个stream pipe 到 bl 或concat-stream中去,他们会为你收集数据，一旦
stream传输结束，一个回调函数会被执行，并且，这个回调函数会带上所收集的数据
    response.pipe(bl(function(err,data){}))
    或者
    response.pipe(concatStream(function(data){}))
要注意的是你可以需要使用data.toString()来把buffer转化为字符串.

