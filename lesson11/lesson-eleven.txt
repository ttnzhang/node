编写一个HTTP文件服务器，它用于将每次所请求的文件返回给客户端.
你的服务器需要监听所提供给你的第一个命令行参数所指定的端口.
同时，第二个会提供给你的程序的参数则是所需要相应的文本文件的位置,
你必须使用fs.createReadStream()方法以stream的形式作出请求响应.

##提示
由于我们需要创建的是一个http服务而不是普通的TCP服务，因此，你应该使用
http这个NODE核心模块，它和net模块类似，http模块拥有一个叫做http
.createServer()的方法，所不同的是它所创建的服务器是用HTTP协议通信的.

http.createServer()接收一个回调函数作为参数，回调函数会在你的服务器
每一次进行连接的时候执行，这个回调函数有一下的特征 ：
    function callback(request,response){}
在这里，这两个参数是代表一个HTTP请求以及相应响应的两个对象，request
用来从请求中获取一些属性，例如请求头和查询字符,而response会发送数据
给客户端,包括响应头部和响应主体.

request和response都是node stream,这意味着，如果需要的话，你可以使用
流式处理所抽象的那些方法来实现发送和接收数据.

http.createServer()会返回一个HTTP服务器的实例。你需要调用server.
listen(portNumber)方法去监听一个特定的端口.

一个典型的node http 服务器将会是这个 样子:
    var http = require('http')
    var server = http.createServer(function(req,res){
        //处理请求的逻辑
    })
    server.listen(8000)
fs这个核心模块也含有一些用来处理文件的流式API，你可以使用fs.create
ReadStream()方法来为命令行参数指定的文件创建一个stream.这个方法会
返回一个stream对象，该对象可以使用类似src.pipe(dst)的语法把数据从
src流传输pipe到dst流中，通过这种形式，你可以轻松的把一个文件系统的
stream和一个HTTP相应的stream链接起来.





